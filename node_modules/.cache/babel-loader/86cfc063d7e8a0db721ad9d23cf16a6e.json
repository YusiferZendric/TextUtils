{"ast":null,"code":"var _jsxFileName = \"S:\\\\ReactJs\\\\GettingStarted\\\\react-website\\\\TextUtils\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    preText.push(text);\n    setText(text.toUpperCase());\n  };\n\n  const handleDnClick = () => {\n    preText.push(text);\n    setText(text.toLowerCase());\n  };\n\n  const handleCapitalize = () => {\n    preText.push(text);\n    setText(text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '));\n  };\n\n  const handleCamelCase = () => {\n    preText.push(text);\n    setText(text.split(' ').map((word, index) => index === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1)).join(''));\n  };\n\n  const handlePascalCase = () => {\n    preText.push(text);\n    setText(text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(''));\n  };\n\n  const handleSnakeCase = () => {\n    preText.push(text);\n    setText(text.split(' ').join('_'));\n  };\n\n  const handleOnChange = event => {\n    preText.push(text);\n    setText(event.target.value);\n  };\n\n  const handleUndo = () => {\n    // set the text to the last item in the preText array\n    if (preText.length > 0) {\n      setText(preText.slice(-1)[0]);\n      preText.pop();\n    } else {\n      setText('');\n    }\n  };\n\n  const generateRandom = () => {\n    const words = ['hello', 'world', 'how', 'are', 'you', \"welcome\", \"this\", \"thing\", \"something\", \"great\"];\n    const num = Math.floor(Math.random() * (80 - 20 + 1)) + 20;\n    let Text = \"\";\n\n    for (let i = 0; i < num; i++) {\n      const randomIndex = Math.floor(Math.random() * words.length);\n      Text += words[randomIndex] + \" \";\n    }\n\n    preText.push(text);\n    setText(Text);\n  };\n\n  const [text, setText] = useState(\"\");\n  const [preText, previousText] = useState([text]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myBox\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `form-control ${{\n          \"dark\": 'bg-dark text-light',\n          \"light\": \"bg-light text-dark\"\n        }[props.mode]} my-3`,\n        id: \"myBox\",\n        value: text,\n        placeholder: \"Enter your text\",\n        onChange: handleOnChange,\n        rows: props.rows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: handleDnClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: generateRandom,\n        children: \"Generate Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: handleCapitalize,\n        children: \"Capitalize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: handleCamelCase,\n        children: \"camelCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: handlePascalCase,\n        children: \"PascalCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block mx-2 my-1\",\n        onClick: handleSnakeCase,\n        children: \"Snake_Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-block mx-2 my-1\",\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-3\",\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length - 1, \" words | \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Minutes to read: \", ((text.length - 1) / 5 * 0.004).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Enter something to preview it here..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"no70La8HqXL7fSffz4kZAU8CLis=\");\n\n_c = TextForm;\nTextForm.propTypes = {\n  text: PropTypes.string.isRequired,\n  rows: PropTypes.string,\n  heading: PropTypes.string,\n  mode: PropTypes.string.isRequired\n};\nTextForm.defaultProps = {\n  rows: '5',\n  text: \"Enter the heading\",\n  heading: \"Enter the heading\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","PropTypes","TextForm","props","handleUpClick","preText","push","text","setText","toUpperCase","handleDnClick","toLowerCase","handleCapitalize","split","map","word","charAt","slice","join","handleCamelCase","index","handlePascalCase","handleSnakeCase","handleOnChange","event","target","value","handleUndo","length","pop","generateRandom","words","num","Math","floor","random","Text","i","randomIndex","previousText","heading","mode","rows","toFixed","propTypes","string","isRequired","defaultProps"],"sources":["S:/ReactJs/GettingStarted/react-website/TextUtils/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        preText.push(text);\r\n        setText(text.toUpperCase());\r\n    }\r\n    const handleDnClick = () => {\r\n        preText.push(text);\r\n        setText(text.toLowerCase());\r\n    }\r\n    const handleCapitalize = () => {\r\n        preText.push(text);\r\n        setText(text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '));\r\n    }\r\n    const handleCamelCase = () => {\r\n        preText.push(text);\r\n        setText(text.split(' ').map((word, index) => index === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1)).join(''));\r\n\r\n    }\r\n    const handlePascalCase = () => {\r\n        preText.push(text);\r\n        setText(text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(''));\r\n\r\n    }\r\n    const handleSnakeCase = () => {\r\n        preText.push(text);\r\n        setText(text.split(' ').join('_'));\r\n\r\n    }\r\n    const handleOnChange = (event) => {\r\n        preText.push(text);\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUndo = () => {\r\n        // set the text to the last item in the preText array\r\n        if (preText.length > 0) {\r\n            setText(preText.slice(-1)[0]);\r\n            preText.pop();\r\n        } else {\r\n            setText('');\r\n        }\r\n    }\r\n\r\n    const generateRandom = () => {\r\n        const words = ['hello', 'world', 'how', 'are', 'you', \"welcome\", \"this\", \"thing\", \"something\", \"great\"];\r\n        const num = Math.floor(Math.random() * (80 - 20 + 1)) + 20;\r\n        let Text = \"\";\r\n        for (let i = 0; i < num; i++) {\r\n            const randomIndex = Math.floor(Math.random() * words.length);\r\n            Text += words[randomIndex] + \" \";\r\n        }\r\n        preText.push(text);\r\n        setText(Text);\r\n\r\n    }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [preText, previousText] = useState([text]);\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <label htmlFor=\"myBox\"><h2>{props.heading}</h2></label>\r\n                <textarea className={`form-control ${{\"dark\": 'bg-dark text-light',\"light\":\"bg-light text-dark\"}[props.mode]} my-3`} id=\"myBox\" value={text} placeholder=\"Enter your text\" onChange={handleOnChange} rows={props.rows}></textarea>\r\n                <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={handleDnClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={generateRandom}>Generate Random</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={handleCapitalize}>Capitalize</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={handleCamelCase}>camelCase</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={handlePascalCase}>PascalCase</button>\r\n                <button className=\"btn btn-primary btn-block mx-2 my-1\" onClick={handleSnakeCase}>Snake_Case</button>\r\n                <button className=\"btn btn-success btn-block mx-2 my-1\" onClick={handleUndo}>Undo</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <hr />\r\n                <h2 className=\"my-3\">Your text summary</h2>\r\n                <p>{text.split(\" \").length - 1} words | {text.length} characters</p>\r\n\r\n                <p>Minutes to read: {(((text.length - 1) / 5) * 0.004).toFixed(2)}</p>\r\n                <hr />\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter something to preview it here..\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    rows: PropTypes.string,\r\n    heading: PropTypes.string,\r\n    mode: PropTypes.string.isRequired\r\n}\r\n\r\nTextForm.defaultProps = {\r\n    rows: '5',\r\n    text: \"Enter the heading\",\r\n    heading: \"Enter the heading\"\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}